{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\kur\\\\notes-app\\\\src\\\\pages\\\\NotesPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useGetNotesQuery, useCreateNoteMutation } from '../api'; // Импортируем хуки из api.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotesPage = () => {\n  _s();\n  const dispatch = useDispatch();\n  const notes = useSelector(state => state.notes.notes); // Получаем заметки из Redux\n  const [newNoteContent, setNewNoteContent] = useState(''); // Состояние для новой заметки\n\n  // Загрузка заметок с помощью RTK Query\n  const {\n    data: fetchedNotes,\n    error: fetchError,\n    isLoading: isLoadingNotes\n  } = useGetNotesQuery();\n\n  // Создание новой заметки с помощью RTK Query\n  const [createNote, {\n    error: createError,\n    isLoading: isCreating\n  }] = useCreateNoteMutation();\n\n  // Эффект для загрузки заметок при монтировании компонента\n  useEffect(() => {\n    if (fetchedNotes) {\n      // Загруженные заметки автоматически попадут в Redux через RTK Query\n    }\n  }, [fetchedNotes]);\n\n  // Функция для добавления заметки\n  const handleAddNote = async () => {\n    if (newNoteContent.trim()) {\n      const note = {\n        content: newNoteContent\n      };\n      try {\n        // Создаем заметку через RTK Query\n        const addedNote = await createNote(note).unwrap();\n        setNewNoteContent(''); // Очищаем поле ввода\n      } catch (error) {\n        console.error('Ошибка при добавлении заметки:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notes-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newNoteContent,\n        onChange: e => setNewNoteContent(e.target.value) // Обновляем состояние ввода\n        ,\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0437\\u0430\\u043C\\u0435\\u0442\\u043A\\u0443\",\n        className: \"note-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddNote,\n        className: \"add-note-button\",\n        disabled: isCreating,\n        children: isCreating ? 'Добавление...' : 'Добавить заметку'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), isLoadingNotes && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0437\\u0430\\u043C\\u0435\\u0442\\u043E\\u043A...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 26\n    }, this), \"  \", fetchError && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u043F\\u0440\\u0438 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0435 \\u0437\\u0430\\u043C\\u0435\\u0442\\u043E\\u043A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"notes-list\",\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"note-item\",\n        children: [note.content, \"  \"]\n      }, note.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), createError && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u043F\\u0440\\u0438 \\u0434\\u043E\\u0431\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0438 \\u0437\\u0430\\u043C\\u0435\\u0442\\u043A\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 23\n    }, this), \"  \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(NotesPage, \"7sVFWMjLZZrAuEmPcL7g3T0ggF8=\", false, function () {\n  return [useDispatch, useSelector, useGetNotesQuery, useCreateNoteMutation];\n});\n_c = NotesPage;\nexport default NotesPage;\nvar _c;\n$RefreshReg$(_c, \"NotesPage\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","useGetNotesQuery","useCreateNoteMutation","jsxDEV","_jsxDEV","NotesPage","_s","dispatch","notes","state","newNoteContent","setNewNoteContent","data","fetchedNotes","error","fetchError","isLoading","isLoadingNotes","createNote","createError","isCreating","handleAddNote","trim","note","content","addedNote","unwrap","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","disabled","map","id","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/kur/notes-app/src/pages/NotesPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useGetNotesQuery, useCreateNoteMutation } from '../api';  // Импортируем хуки из api.js\r\n\r\nconst NotesPage = () => {\r\n  const dispatch = useDispatch();\r\n  const notes = useSelector((state) => state.notes.notes);  // Получаем заметки из Redux\r\n  const [newNoteContent, setNewNoteContent] = useState('');  // Состояние для новой заметки\r\n\r\n  // Загрузка заметок с помощью RTK Query\r\n  const { data: fetchedNotes, error: fetchError, isLoading: isLoadingNotes } = useGetNotesQuery();\r\n  \r\n  // Создание новой заметки с помощью RTK Query\r\n  const [createNote, { error: createError, isLoading: isCreating }] = useCreateNoteMutation();\r\n\r\n  // Эффект для загрузки заметок при монтировании компонента\r\n  useEffect(() => {\r\n    if (fetchedNotes) {\r\n      // Загруженные заметки автоматически попадут в Redux через RTK Query\r\n    }\r\n  }, [fetchedNotes]);\r\n\r\n  // Функция для добавления заметки\r\n  const handleAddNote = async () => {\r\n    if (newNoteContent.trim()) {\r\n      const note = { content: newNoteContent };\r\n      try {\r\n        // Создаем заметку через RTK Query\r\n        const addedNote = await createNote(note).unwrap();\r\n        setNewNoteContent('');  // Очищаем поле ввода\r\n      } catch (error) {\r\n        console.error('Ошибка при добавлении заметки:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"notes-page\">\r\n      <h1>Notes Page</h1>\r\n      <div className=\"note-input-container\">\r\n        <input\r\n          type=\"text\"\r\n          value={newNoteContent}\r\n          onChange={(e) => setNewNoteContent(e.target.value)}  // Обновляем состояние ввода\r\n          placeholder=\"Введите заметку\"\r\n          className=\"note-input\"\r\n        />\r\n        <button onClick={handleAddNote} className=\"add-note-button\" disabled={isCreating}>\r\n          {isCreating ? 'Добавление...' : 'Добавить заметку'}\r\n        </button>\r\n      </div>\r\n      {isLoadingNotes && <div>Загрузка заметок...</div>}  {/* Индикатор загрузки */}\r\n      {fetchError && <div>Ошибка при загрузке заметок</div>}\r\n      <ul className=\"notes-list\">\r\n        {notes.map((note) => (\r\n          <li key={note.id} className=\"note-item\">\r\n            {note.content}  {/* Выводим содержимое заметки */}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {createError && <div>Ошибка при добавлении заметки</div>}  {/* Индикатор ошибки */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotesPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}