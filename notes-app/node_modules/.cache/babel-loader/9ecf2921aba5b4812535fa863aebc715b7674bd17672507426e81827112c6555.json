{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { api } from '../../api'; // Импортируем API с RTK Query\n\nconst initialState = {\n  notes: [],\n  trash: [],\n  status: 'idle',\n  // Статус для запросов\n  error: null // Ошибки, если они возникнут\n};\nconst notesSlice = createSlice({\n  name: 'notes',\n  initialState,\n  reducers: {\n    // Дополнительные действия, если нужно\n  },\n  extraReducers: builder => {\n    // Получить все заметки\n    builder.addMatcher(api.endpoints.getNotes.matchFulfilled, (state, action) => {\n      state.notes = action.payload; // Получаем все заметки\n      state.status = 'succeeded'; // Запрос успешен\n    });\n    builder.addMatcher(api.endpoints.getNotes.matchPending, state => {\n      state.status = 'loading'; // Запрос в процессе\n    });\n    builder.addMatcher(api.endpoints.getNotes.matchRejected, (state, action) => {\n      state.status = 'failed'; // Запрос завершился с ошибкой\n      state.error = action.error.message; // Записываем сообщение об ошибке\n    });\n\n    // Добавить новую заметку\n    builder.addMatcher(api.endpoints.createNote.matchFulfilled, (state, action) => {\n      state.notes.push(action.payload); // Добавляем новую заметку в состояние\n    });\n    builder.addMatcher(api.endpoints.createNote.matchPending, state => {\n      state.status = 'loading'; // Запрос на создание заметки\n    });\n    builder.addMatcher(api.endpoints.createNote.matchRejected, (state, action) => {\n      state.status = 'failed'; // Запрос завершился с ошибкой\n      state.error = action.error.message; // Записываем сообщение об ошибке\n    });\n\n    // Удалить заметку\n    builder.addMatcher(api.endpoints.deleteNote.matchFulfilled, (state, action) => {\n      state.notes = state.notes.filter(note => note.id !== action.payload); // Удаляем заметку из списка\n    });\n\n    // Обновить заметку\n    builder.addMatcher(api.endpoints.updateNote.matchFulfilled, (state, action) => {\n      const index = state.notes.findIndex(note => note.id === action.payload.id);\n      if (index !== -1) {\n        state.notes[index] = action.payload; // Обновляем заметку\n      }\n    });\n\n    // Переместить в корзину\n    builder.addMatcher(api.endpoints.moveToTrash.matchFulfilled, (state, action) => {\n      const note = state.notes.find(note => note.id === action.payload);\n      if (note) {\n        state.notes = state.notes.filter(note => note.id !== action.payload);\n        state.trash.push(note); // Перемещаем заметку в корзину\n      }\n    });\n\n    // Восстановить заметку из корзины\n    builder.addMatcher(api.endpoints.restoreNote.matchFulfilled, (state, action) => {\n      const note = state.trash.find(note => note.id === action.payload);\n      if (note) {\n        state.trash = state.trash.filter(note => note.id !== action.payload);\n        state.notes.push(note); // Восстанавливаем заметку\n      }\n    });\n\n    // Удалить заметку навсегда\n    builder.addMatcher(api.endpoints.deleteNoteForever.matchFulfilled, (state, action) => {\n      state.trash = state.trash.filter(note => note.id !== action.payload); // Удаляем заметку навсегда\n    });\n  }\n});\nexport const {\n  moveToTrash,\n  restoreNote,\n  deleteNoteForever\n} = notesSlice.actions;\nexport default notesSlice.reducer;","map":{"version":3,"names":["createSlice","api","initialState","notes","trash","status","error","notesSlice","name","reducers","extraReducers","builder","addMatcher","endpoints","getNotes","matchFulfilled","state","action","payload","matchPending","matchRejected","message","createNote","push","deleteNote","filter","note","id","updateNote","index","findIndex","moveToTrash","find","restoreNote","deleteNoteForever","actions","reducer"],"sources":["C:/Users/User/Desktop/kur/notes-app/src/redux/slices/notesSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport { api } from '../../api'; // Импортируем API с RTK Query\r\n\r\nconst initialState = {\r\n  notes: [],\r\n  trash: [],\r\n  status: 'idle', // Статус для запросов\r\n  error: null, // Ошибки, если они возникнут\r\n};\r\n\r\nconst notesSlice = createSlice({\r\n  name: 'notes',\r\n  initialState,\r\n  reducers: {\r\n    // Дополнительные действия, если нужно\r\n  },\r\n  extraReducers: (builder) => {\r\n    // Получить все заметки\r\n    builder.addMatcher(api.endpoints.getNotes.matchFulfilled, (state, action) => {\r\n      state.notes = action.payload; // Получаем все заметки\r\n      state.status = 'succeeded'; // Запрос успешен\r\n    });\r\n    builder.addMatcher(api.endpoints.getNotes.matchPending, (state) => {\r\n      state.status = 'loading'; // Запрос в процессе\r\n    });\r\n    builder.addMatcher(api.endpoints.getNotes.matchRejected, (state, action) => {\r\n      state.status = 'failed'; // Запрос завершился с ошибкой\r\n      state.error = action.error.message; // Записываем сообщение об ошибке\r\n    });\r\n\r\n    // Добавить новую заметку\r\n    builder.addMatcher(api.endpoints.createNote.matchFulfilled, (state, action) => {\r\n      state.notes.push(action.payload); // Добавляем новую заметку в состояние\r\n    });\r\n    builder.addMatcher(api.endpoints.createNote.matchPending, (state) => {\r\n      state.status = 'loading'; // Запрос на создание заметки\r\n    });\r\n    builder.addMatcher(api.endpoints.createNote.matchRejected, (state, action) => {\r\n      state.status = 'failed'; // Запрос завершился с ошибкой\r\n      state.error = action.error.message; // Записываем сообщение об ошибке\r\n    });\r\n\r\n    // Удалить заметку\r\n    builder.addMatcher(api.endpoints.deleteNote.matchFulfilled, (state, action) => {\r\n      state.notes = state.notes.filter(note => note.id !== action.payload); // Удаляем заметку из списка\r\n    });\r\n\r\n    // Обновить заметку\r\n    builder.addMatcher(api.endpoints.updateNote.matchFulfilled, (state, action) => {\r\n      const index = state.notes.findIndex(note => note.id === action.payload.id);\r\n      if (index !== -1) {\r\n        state.notes[index] = action.payload; // Обновляем заметку\r\n      }\r\n    });\r\n\r\n    // Переместить в корзину\r\n    builder.addMatcher(api.endpoints.moveToTrash.matchFulfilled, (state, action) => {\r\n      const note = state.notes.find(note => note.id === action.payload);\r\n      if (note) {\r\n        state.notes = state.notes.filter(note => note.id !== action.payload);\r\n        state.trash.push(note); // Перемещаем заметку в корзину\r\n      }\r\n    });\r\n\r\n    // Восстановить заметку из корзины\r\n    builder.addMatcher(api.endpoints.restoreNote.matchFulfilled, (state, action) => {\r\n      const note = state.trash.find(note => note.id === action.payload);\r\n      if (note) {\r\n        state.trash = state.trash.filter(note => note.id !== action.payload);\r\n        state.notes.push(note); // Восстанавливаем заметку\r\n      }\r\n    });\r\n\r\n    // Удалить заметку навсегда\r\n    builder.addMatcher(api.endpoints.deleteNoteForever.matchFulfilled, (state, action) => {\r\n      state.trash = state.trash.filter(note => note.id !== action.payload); // Удаляем заметку навсегда\r\n    });\r\n  },\r\n});\r\n\r\nexport const { moveToTrash, restoreNote, deleteNoteForever } = notesSlice.actions;\r\n\r\nexport default notesSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}