{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  notes: [],\n  trash: [] // Массив для заметок в корзине\n};\nconst notesSlice = createSlice({\n  name: 'notes',\n  initialState,\n  reducers: {\n    addNote: (state, action) => {\n      state.notes.push(action.payload); // Добавление новой заметки\n    },\n    moveToTrash: (state, action) => {\n      const note = state.notes.find(note => note.id === action.payload);\n      if (note) {\n        state.notes = state.notes.filter(note => note.id !== action.payload); // Удаляем заметку из обычных\n        state.trash.push(note); // Добавляем её в корзину\n      }\n    },\n    restoreNote: (state, action) => {\n      const note = state.trash.find(note => note.id === action.payload);\n      if (note) {\n        state.trash = state.trash.filter(note => note.id !== action.payload); // Убираем из корзины\n        state.notes.push(note); // Восстанавливаем в обычные заметки\n      }\n    },\n    deleteNoteForever: (state, action) => {\n      state.trash = state.trash.filter(note => note.id !== action.payload); // Удаляем заметку навсегда\n    }\n  }\n});\nexport const {\n  addNote,\n  moveToTrash,\n  restoreNote,\n  deleteNoteForever\n} = notesSlice.actions;\nexport default notesSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","notes","trash","notesSlice","name","reducers","addNote","state","action","push","payload","moveToTrash","note","find","id","filter","restoreNote","deleteNoteForever","actions","reducer"],"sources":["C:/Users/User/Desktop/kur/notes-app/src/redux/slices/notesSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  notes: [],\r\n  trash: [], // Массив для заметок в корзине\r\n};\r\n\r\nconst notesSlice = createSlice({\r\n  name: 'notes',\r\n  initialState,\r\n  reducers: {\r\n    addNote: (state, action) => {\r\n      state.notes.push(action.payload); // Добавление новой заметки\r\n    },\r\n    moveToTrash: (state, action) => {\r\n      const note = state.notes.find((note) => note.id === action.payload);\r\n      if (note) {\r\n        state.notes = state.notes.filter((note) => note.id !== action.payload); // Удаляем заметку из обычных\r\n        state.trash.push(note); // Добавляем её в корзину\r\n      }\r\n    },\r\n    restoreNote: (state, action) => {\r\n      const note = state.trash.find((note) => note.id === action.payload);\r\n      if (note) {\r\n        state.trash = state.trash.filter((note) => note.id !== action.payload); // Убираем из корзины\r\n        state.notes.push(note); // Восстанавливаем в обычные заметки\r\n      }\r\n    },\r\n    deleteNoteForever: (state, action) => {\r\n      state.trash = state.trash.filter((note) => note.id !== action.payload); // Удаляем заметку навсегда\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addNote, moveToTrash, restoreNote, deleteNoteForever } = notesSlice.actions;\r\n\r\nexport default notesSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EAAE;EACTC,KAAK,EAAE,EAAE,CAAE;AACb,CAAC;AAED,MAAMC,UAAU,GAAGJ,WAAW,CAAC;EAC7BK,IAAI,EAAE,OAAO;EACbJ,YAAY;EACZK,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1BD,KAAK,CAACN,KAAK,CAACQ,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC,CAAC,CAAC;IACpC,CAAC;IACDC,WAAW,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAC9B,MAAMI,IAAI,GAAGL,KAAK,CAACN,KAAK,CAACY,IAAI,CAAED,IAAI,IAAKA,IAAI,CAACE,EAAE,KAAKN,MAAM,CAACE,OAAO,CAAC;MACnE,IAAIE,IAAI,EAAE;QACRL,KAAK,CAACN,KAAK,GAAGM,KAAK,CAACN,KAAK,CAACc,MAAM,CAAEH,IAAI,IAAKA,IAAI,CAACE,EAAE,KAAKN,MAAM,CAACE,OAAO,CAAC,CAAC,CAAC;QACxEH,KAAK,CAACL,KAAK,CAACO,IAAI,CAACG,IAAI,CAAC,CAAC,CAAC;MAC1B;IACF,CAAC;IACDI,WAAW,EAAEA,CAACT,KAAK,EAAEC,MAAM,KAAK;MAC9B,MAAMI,IAAI,GAAGL,KAAK,CAACL,KAAK,CAACW,IAAI,CAAED,IAAI,IAAKA,IAAI,CAACE,EAAE,KAAKN,MAAM,CAACE,OAAO,CAAC;MACnE,IAAIE,IAAI,EAAE;QACRL,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,CAACa,MAAM,CAAEH,IAAI,IAAKA,IAAI,CAACE,EAAE,KAAKN,MAAM,CAACE,OAAO,CAAC,CAAC,CAAC;QACxEH,KAAK,CAACN,KAAK,CAACQ,IAAI,CAACG,IAAI,CAAC,CAAC,CAAC;MAC1B;IACF,CAAC;IACDK,iBAAiB,EAAEA,CAACV,KAAK,EAAEC,MAAM,KAAK;MACpCD,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,CAACa,MAAM,CAAEH,IAAI,IAAKA,IAAI,CAACE,EAAE,KAAKN,MAAM,CAACE,OAAO,CAAC,CAAC,CAAC;IAC1E;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEJ,OAAO;EAAEK,WAAW;EAAEK,WAAW;EAAEC;AAAkB,CAAC,GAAGd,UAAU,CAACe,OAAO;AAE1F,eAAef,UAAU,CAACgB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}