{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { api } from '../../api'; // Подключаем API, чтобы использовать хук для авторизации\n\nconst initialState = {\n  isAuthenticated: false,\n  user: null,\n  error: null,\n  username: '',\n  token: localStorage.getItem('access_token') || '' // Загружаем токен из localStorage (если он есть)\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    logout(state) {\n      state.isAuthenticated = false;\n      state.user = null;\n      state.error = null;\n      state.username = '';\n      state.token = ''; // Очищаем токен при выходе\n      localStorage.removeItem('access_token'); // Удаляем токен из localStorage\n    },\n    clearError(state) {\n      state.error = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addMatcher(api.endpoints.loginUser.matchFulfilled, (state, action) => {\n      const {\n        username,\n        access_token\n      } = action.payload; // Получаем имя пользователя и токен из ответа API\n      state.isAuthenticated = true;\n      state.user = username;\n      state.error = null;\n      state.token = access_token; // Сохраняем токен в состоянии\n      localStorage.setItem('access_token', access_token); // Сохраняем токен в localStorage\n    }).addMatcher(api.endpoints.loginUser.matchRejected, (state, action) => {\n      state.error = 'Неправильный логин или пароль'; // Обрабатываем ошибку при авторизации\n    });\n  }\n});\nexport const {\n  logout,\n  clearError\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","api","initialState","isAuthenticated","user","error","username","token","localStorage","getItem","authSlice","name","reducers","logout","state","removeItem","clearError","extraReducers","builder","addMatcher","endpoints","loginUser","matchFulfilled","action","access_token","payload","setItem","matchRejected","actions","reducer"],"sources":["C:/Users/User/Desktop/kur/notes-app/src/redux/slices/authSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport { api } from '../../api'; // Подключаем API, чтобы использовать хук для авторизации\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: null,\r\n  error: null,\r\n  username: '',\r\n  token: localStorage.getItem('access_token') || '', // Загружаем токен из localStorage (если он есть)\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    logout(state) {\r\n      state.isAuthenticated = false;\r\n      state.user = null;\r\n      state.error = null;\r\n      state.username = '';\r\n      state.token = ''; // Очищаем токен при выходе\r\n      localStorage.removeItem('access_token'); // Удаляем токен из localStorage\r\n    },\r\n    clearError(state) {\r\n      state.error = null;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addMatcher(api.endpoints.loginUser.matchFulfilled, (state, action) => {\r\n        const { username, access_token } = action.payload; // Получаем имя пользователя и токен из ответа API\r\n        state.isAuthenticated = true;\r\n        state.user = username;\r\n        state.error = null;\r\n        state.token = access_token; // Сохраняем токен в состоянии\r\n        localStorage.setItem('access_token', access_token); // Сохраняем токен в localStorage\r\n      })\r\n      .addMatcher(api.endpoints.loginUser.matchRejected, (state, action) => {\r\n        state.error = 'Неправильный логин или пароль'; // Обрабатываем ошибку при авторизации\r\n      });\r\n  },\r\n});\r\n\r\nexport const { logout, clearError } = authSlice.actions;\r\nexport default authSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,GAAG,QAAQ,WAAW,CAAC,CAAC;;AAEjC,MAAMC,YAAY,GAAG;EACnBC,eAAe,EAAE,KAAK;EACtBC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAE,IAAI;EACXC,QAAQ,EAAE,EAAE;EACZC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,IAAI,EAAE,CAAE;AACrD,CAAC;AAED,MAAMC,SAAS,GAAGV,WAAW,CAAC;EAC5BW,IAAI,EAAE,MAAM;EACZT,YAAY;EACZU,QAAQ,EAAE;IACRC,MAAMA,CAACC,KAAK,EAAE;MACZA,KAAK,CAACX,eAAe,GAAG,KAAK;MAC7BW,KAAK,CAACV,IAAI,GAAG,IAAI;MACjBU,KAAK,CAACT,KAAK,GAAG,IAAI;MAClBS,KAAK,CAACR,QAAQ,GAAG,EAAE;MACnBQ,KAAK,CAACP,KAAK,GAAG,EAAE,CAAC,CAAC;MAClBC,YAAY,CAACO,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC;IAC3C,CAAC;IACDC,UAAUA,CAACF,KAAK,EAAE;MAChBA,KAAK,CAACT,KAAK,GAAG,IAAI;IACpB;EACF,CAAC;EACDY,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,UAAU,CAAClB,GAAG,CAACmB,SAAS,CAACC,SAAS,CAACC,cAAc,EAAE,CAACR,KAAK,EAAES,MAAM,KAAK;MACrE,MAAM;QAAEjB,QAAQ;QAAEkB;MAAa,CAAC,GAAGD,MAAM,CAACE,OAAO,CAAC,CAAC;MACnDX,KAAK,CAACX,eAAe,GAAG,IAAI;MAC5BW,KAAK,CAACV,IAAI,GAAGE,QAAQ;MACrBQ,KAAK,CAACT,KAAK,GAAG,IAAI;MAClBS,KAAK,CAACP,KAAK,GAAGiB,YAAY,CAAC,CAAC;MAC5BhB,YAAY,CAACkB,OAAO,CAAC,cAAc,EAAEF,YAAY,CAAC,CAAC,CAAC;IACtD,CAAC,CAAC,CACDL,UAAU,CAAClB,GAAG,CAACmB,SAAS,CAACC,SAAS,CAACM,aAAa,EAAE,CAACb,KAAK,EAAES,MAAM,KAAK;MACpET,KAAK,CAACT,KAAK,GAAG,+BAA+B,CAAC,CAAC;IACjD,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEQ,MAAM;EAAEG;AAAW,CAAC,GAAGN,SAAS,CAACkB,OAAO;AACvD,eAAelB,SAAS,CAACmB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}