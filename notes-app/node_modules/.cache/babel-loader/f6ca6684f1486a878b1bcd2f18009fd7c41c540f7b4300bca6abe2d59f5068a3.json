{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\kur\\\\notes-app\\\\src\\\\pages\\\\HomePage.js\",\n  _s = $RefreshSig$();\n// src/pages/HomePage.js\nimport React, { useState } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css'; // Импортируем стили для календаря\nimport '../styles/HomePage.css'; // Подключаем стили для страницы\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [notes, setNotes] = useState([]); // Состояние для заметок\n  const [newNote, setNewNote] = useState({\n    text: '',\n    topic: '',\n    tag: ''\n  }); // Состояние для новой заметки\n  const [showPopup, setShowPopup] = useState(false); // Состояние для отображения попапа\n  const [popupNote, setPopupNote] = useState(null); // Состояние для выбранной заметки в попапе\n  const [editMode, setEditMode] = useState(false); // Режим редактирования\n  const [currentNoteIndex, setCurrentNoteIndex] = useState(null); // Индекс редактируемой заметки\n  const [searchQuery, setSearchQuery] = useState(''); // Состояние для строки поиска\n  const [selectedDate, setSelectedDate] = useState(null); // Состояние для выбранной даты\n\n  // Функция для добавления новой заметки\n  const handleAddNote = () => {\n    if (newNote.topic.trim() === '') return; // Проверка на пустую тему\n    const newNoteWithDate = {\n      ...newNote,\n      createdAt: new Date().toISOString() // Добавляем дату создания\n    };\n    setNotes([...notes, newNoteWithDate]);\n    setNewNote({\n      text: '',\n      topic: '',\n      tag: ''\n    }); // Очищаем поля после добавления заметки\n  };\n\n  // Функция для удаления заметки\n  const handleDeleteNote = index => {\n    setNotes(notes.filter((_, i) => i !== index));\n  };\n\n  // Открытие попапа с заметкой\n  const handleOpenNote = (note, index) => {\n    setPopupNote(note);\n    setCurrentNoteIndex(index); // Сохраняем индекс заметки для редактирования\n    setShowPopup(true);\n    setEditMode(false); // Выключаем режим редактирования\n  };\n\n  // Функция для начала редактирования заметки в попапе\n  const handleEditNote = () => {\n    setEditMode(true); // Включаем режим редактирования\n  };\n\n  // Функция для сохранения отредактированной заметки\n  const handleSaveEdit = () => {\n    // Создаем новый массив заметок\n    const updatedNotes = [...notes];\n    // Обновляем только нужную заметку по индексу\n    updatedNotes[currentNoteIndex] = {\n      ...popupNote,\n      // Сохраняем изменения\n      createdAt: popupNote.createdAt // Сохраняем старую дату\n    };\n    setNotes(updatedNotes); // Обновляем заметки с новой редактированной заметкой\n    setEditMode(false); // Выключаем режим редактирования\n    setShowPopup(false); // Закрываем попап после сохранения\n  };\n\n  // Функция для обработки изменения текста заметки\n  const handleTextChange = e => {\n    setPopupNote({\n      ...popupNote,\n      text: e.target.value\n    }); // Меняем только для текущей заметки в попапе\n  };\n\n  // Функция для обработки изменения темы с ограничением в 30 символов\n  const handleTopicChange = e => {\n    const topic = e.target.value.slice(0, 30); // Ограничиваем до 30 символов\n    setPopupNote({\n      ...popupNote,\n      topic\n    });\n  };\n\n  // Функция для обработки изменения тега с ограничением в 30 символов\n  const handleTagChange = e => {\n    const tag = e.target.value.slice(0, 30); // Ограничиваем до 30 символов\n    setPopupNote({\n      ...popupNote,\n      tag\n    });\n  };\n\n  // Функция для обработки изменения строки поиска\n  const handleSearchChange = e => {\n    setSearchQuery(e.target.value.toLowerCase()); // Переводим строку в нижний регистр для удобства поиска\n  };\n\n  // Функция для сортировки заметок по дате (по убыванию)\n  const sortNotesByDate = notesArray => {\n    return notesArray.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n  };\n\n  // Фильтруем заметки по строке поиска\n  const filteredNotes = notes.filter(note => {\n    const searchInText = note.text.toLowerCase().includes(searchQuery);\n    const searchInTopic = note.topic.toLowerCase().includes(searchQuery);\n    const searchInTag = note.tag.toLowerCase().includes(searchQuery);\n    return searchInText || searchInTopic || searchInTag; // Ищем по всем полям\n  });\n\n  // Фильтруем заметки по выбранной дате\n  const filterByDate = (notesArray, date) => {\n    if (!date) return notesArray; // Если дата не выбрана, возвращаем все заметки\n    return notesArray.filter(note => {\n      const noteDate = new Date(note.createdAt);\n      return noteDate.getDate() === date.getDate() && noteDate.getMonth() === date.getMonth() && noteDate.getFullYear() === date.getFullYear();\n    });\n  };\n\n  // Сортируем заметки по дате\n  const sortedNotes = sortNotesByDate(filteredNotes);\n  const filteredByDateNotes = filterByDate(sortedNotes, selectedDate);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-page\",\n    children: [notes.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered-text\",\n      children: \"\\u0416\\u0434\\u0443 \\u0432\\u0430\\u0448\\u0438 \\u0437\\u0430\\u043C\\u0435\\u0442\\u043A\\u0438!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchQuery,\n        onChange: handleSearchChange,\n        placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A \\u043F\\u043E \\u043A\\u043B\\u044E\\u0447\\u0435\\u0432\\u044B\\u043C \\u0441\\u043B\\u043E\\u0432\\u0430\\u043C\",\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newNote.topic,\n        onChange: e => setNewNote({\n          ...newNote,\n          topic: e.target.value\n        }),\n        placeholder: \"\\u0422\\u0435\\u043C\\u0430 \\u0437\\u0430\\u043C\\u0435\\u0442\\u043A\\u0438\",\n        className: \"note-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newNote.tag,\n        onChange: e => setNewNote({\n          ...newNote,\n          tag: e.target.value\n        }),\n        placeholder: \"\\u0422\\u0435\\u0433\",\n        className: \"note-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: newNote.text,\n        onChange: e => setNewNote({\n          ...newNote,\n          text: e.target.value\n        }),\n        placeholder: \"\\u0422\\u0435\\u043A\\u0441\\u0442 \\u0437\\u0430\\u043C\\u0435\\u0442\\u043A\\u0438\",\n        className: \"note-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddNote,\n        className: \"note-button\",\n        children: \"\\u0417\\u0430\\u043F\\u0438\\u0441\\u0430\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), showPopup && popupNote && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\u0422\\u0435\\u043C\\u0430:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this), editMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: popupNote.topic,\n            onChange: handleTopicChange,\n            className: \"note-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: popupNote.topic\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\u0422\\u0435\\u0433\\u0438:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this), editMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: popupNote.tag,\n            onChange: handleTagChange,\n            className: \"note-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: popupNote.tag\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\u0422\\u0435\\u043A\\u0441\\u0442:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this), editMode ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: popupNote.text,\n            onChange: handleTextChange,\n            className: \"note-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: popupNote.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-date\",\n          children: [new Date(popupNote.createdAt).toLocaleDateString(), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowPopup(false),\n          className: \"popup-close\",\n          children: \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEditNote,\n          className: \"popup-edit\",\n          children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this), editMode && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSaveEdit,\n          className: \"popup-save\",\n          children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 15\n        }, this) // Кнопка для сохранения изменений\n        ]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-container\",\n      children: /*#__PURE__*/_jsxDEV(Calendar, {\n        onChange: setSelectedDate,\n        value: selectedDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-container\",\n      children: [filteredByDateNotes.length === 0 && selectedDate && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-results\",\n        children: \"\\u0417\\u0430\\u043C\\u0435\\u0442\\u043A\\u0438 \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u044B \\u0434\\u043B\\u044F \\u044D\\u0442\\u043E\\u0439 \\u0434\\u0430\\u0442\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this), filteredByDateNotes.map((note, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [note.topic, \" - \", note.tag]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteNote(index),\n            className: \"delete-note\",\n            children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [note.text.substring(0, 30), \"...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleOpenNote(note, index) // Передаем индекс для редактирования\n          ,\n          className: \"view-note\",\n          children: \"\\u0421\\u043C\\u043E\\u0442\\u0440\\u0435\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-date\",\n          children: [new Date(note.createdAt).toLocaleDateString(), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"aEQxX51M9hx39s+oWZBUsuhHkws=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","Calendar","jsxDEV","_jsxDEV","HomePage","_s","notes","setNotes","newNote","setNewNote","text","topic","tag","showPopup","setShowPopup","popupNote","setPopupNote","editMode","setEditMode","currentNoteIndex","setCurrentNoteIndex","searchQuery","setSearchQuery","selectedDate","setSelectedDate","handleAddNote","trim","newNoteWithDate","createdAt","Date","toISOString","handleDeleteNote","index","filter","_","i","handleOpenNote","note","handleEditNote","handleSaveEdit","updatedNotes","handleTextChange","e","target","value","handleTopicChange","slice","handleTagChange","handleSearchChange","toLowerCase","sortNotesByDate","notesArray","sort","a","b","filteredNotes","searchInText","includes","searchInTopic","searchInTag","filterByDate","date","noteDate","getDate","getMonth","getFullYear","sortedNotes","filteredByDateNotes","className","children","length","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","toLocaleDateString","map","substring","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/kur/notes-app/src/pages/HomePage.js"],"sourcesContent":["// src/pages/HomePage.js\r\nimport React, { useState } from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css'; // Импортируем стили для календаря\r\nimport '../styles/HomePage.css'; // Подключаем стили для страницы\r\n\r\nconst HomePage = () => {\r\n  const [notes, setNotes] = useState([]); // Состояние для заметок\r\n  const [newNote, setNewNote] = useState({ text: '', topic: '', tag: '' }); // Состояние для новой заметки\r\n  const [showPopup, setShowPopup] = useState(false); // Состояние для отображения попапа\r\n  const [popupNote, setPopupNote] = useState(null); // Состояние для выбранной заметки в попапе\r\n  const [editMode, setEditMode] = useState(false); // Режим редактирования\r\n  const [currentNoteIndex, setCurrentNoteIndex] = useState(null); // Индекс редактируемой заметки\r\n  const [searchQuery, setSearchQuery] = useState(''); // Состояние для строки поиска\r\n  const [selectedDate, setSelectedDate] = useState(null); // Состояние для выбранной даты\r\n\r\n  // Функция для добавления новой заметки\r\n  const handleAddNote = () => {\r\n    if (newNote.topic.trim() === '') return; // Проверка на пустую тему\r\n    const newNoteWithDate = {\r\n      ...newNote,\r\n      createdAt: new Date().toISOString(), // Добавляем дату создания\r\n    };\r\n    setNotes([...notes, newNoteWithDate]);\r\n    setNewNote({ text: '', topic: '', tag: '' }); // Очищаем поля после добавления заметки\r\n  };\r\n\r\n  // Функция для удаления заметки\r\n  const handleDeleteNote = (index) => {\r\n    setNotes(notes.filter((_, i) => i !== index));\r\n  };\r\n\r\n  // Открытие попапа с заметкой\r\n  const handleOpenNote = (note, index) => {\r\n    setPopupNote(note);\r\n    setCurrentNoteIndex(index); // Сохраняем индекс заметки для редактирования\r\n    setShowPopup(true);\r\n    setEditMode(false); // Выключаем режим редактирования\r\n  };\r\n\r\n  // Функция для начала редактирования заметки в попапе\r\n  const handleEditNote = () => {\r\n    setEditMode(true); // Включаем режим редактирования\r\n  };\r\n\r\n  // Функция для сохранения отредактированной заметки\r\n  const handleSaveEdit = () => {\r\n    // Создаем новый массив заметок\r\n    const updatedNotes = [...notes];\r\n    // Обновляем только нужную заметку по индексу\r\n    updatedNotes[currentNoteIndex] = {\r\n      ...popupNote, // Сохраняем изменения\r\n      createdAt: popupNote.createdAt, // Сохраняем старую дату\r\n    };\r\n    setNotes(updatedNotes); // Обновляем заметки с новой редактированной заметкой\r\n    setEditMode(false); // Выключаем режим редактирования\r\n    setShowPopup(false); // Закрываем попап после сохранения\r\n  };\r\n\r\n  // Функция для обработки изменения текста заметки\r\n  const handleTextChange = (e) => {\r\n    setPopupNote({ ...popupNote, text: e.target.value }); // Меняем только для текущей заметки в попапе\r\n  };\r\n\r\n  // Функция для обработки изменения темы с ограничением в 30 символов\r\n  const handleTopicChange = (e) => {\r\n    const topic = e.target.value.slice(0, 30); // Ограничиваем до 30 символов\r\n    setPopupNote({ ...popupNote, topic });\r\n  };\r\n\r\n  // Функция для обработки изменения тега с ограничением в 30 символов\r\n  const handleTagChange = (e) => {\r\n    const tag = e.target.value.slice(0, 30); // Ограничиваем до 30 символов\r\n    setPopupNote({ ...popupNote, tag });\r\n  };\r\n\r\n  // Функция для обработки изменения строки поиска\r\n  const handleSearchChange = (e) => {\r\n    setSearchQuery(e.target.value.toLowerCase()); // Переводим строку в нижний регистр для удобства поиска\r\n  };\r\n\r\n  // Функция для сортировки заметок по дате (по убыванию)\r\n  const sortNotesByDate = (notesArray) => {\r\n    return notesArray.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\r\n  };\r\n\r\n  // Фильтруем заметки по строке поиска\r\n  const filteredNotes = notes.filter((note) => {\r\n    const searchInText = note.text.toLowerCase().includes(searchQuery);\r\n    const searchInTopic = note.topic.toLowerCase().includes(searchQuery);\r\n    const searchInTag = note.tag.toLowerCase().includes(searchQuery);\r\n    return searchInText || searchInTopic || searchInTag; // Ищем по всем полям\r\n  });\r\n\r\n  // Фильтруем заметки по выбранной дате\r\n  const filterByDate = (notesArray, date) => {\r\n    if (!date) return notesArray; // Если дата не выбрана, возвращаем все заметки\r\n    return notesArray.filter((note) => {\r\n      const noteDate = new Date(note.createdAt);\r\n      return (\r\n        noteDate.getDate() === date.getDate() &&\r\n        noteDate.getMonth() === date.getMonth() &&\r\n        noteDate.getFullYear() === date.getFullYear()\r\n      );\r\n    });\r\n  };\r\n\r\n  // Сортируем заметки по дате\r\n  const sortedNotes = sortNotesByDate(filteredNotes);\r\n  const filteredByDateNotes = filterByDate(sortedNotes, selectedDate);\r\n\r\n  return (\r\n    <div className=\"home-page\">\r\n      {/* Если нет заметок, показываем сообщение */}\r\n      {notes.length === 0 && (\r\n        <div className=\"centered-text\">Жду ваши заметки!</div>\r\n      )}\r\n\r\n      {/* Строка поиска */}\r\n      <div className=\"search-bar\">\r\n        <input\r\n          type=\"text\"\r\n          value={searchQuery}\r\n          onChange={handleSearchChange}\r\n          placeholder=\"Поиск по ключевым словам\"\r\n          className=\"search-input\"\r\n        />\r\n      </div>\r\n\r\n      {/* Форма для создания новой заметки */}\r\n      <div className=\"note-form\">\r\n        <input\r\n          type=\"text\"\r\n          value={newNote.topic}\r\n          onChange={(e) => setNewNote({ ...newNote, topic: e.target.value })}\r\n          placeholder=\"Тема заметки\"\r\n          className=\"note-input\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={newNote.tag}\r\n          onChange={(e) => setNewNote({ ...newNote, tag: e.target.value })}\r\n          placeholder=\"Тег\"\r\n          className=\"note-input\"\r\n        />\r\n        <textarea\r\n          value={newNote.text}\r\n          onChange={(e) => setNewNote({ ...newNote, text: e.target.value })}\r\n          placeholder=\"Текст заметки\"\r\n          className=\"note-input\"\r\n        />\r\n        <button onClick={handleAddNote} className=\"note-button\">Записать</button>\r\n      </div>\r\n\r\n      {/* Попап для отображения текста заметки */}\r\n      {showPopup && popupNote && (\r\n        <div className=\"popup\">\r\n          <div className=\"popup-content\">\r\n            <div>\r\n              <strong>Тема:</strong>\r\n              {editMode ? (\r\n                <input\r\n                  type=\"text\"\r\n                  value={popupNote.topic}\r\n                  onChange={handleTopicChange}\r\n                  className=\"note-input\"\r\n                />\r\n              ) : (\r\n                <span>{popupNote.topic}</span>\r\n              )}\r\n            </div>\r\n            <div>\r\n              <strong>Теги:</strong>\r\n              {editMode ? (\r\n                <input\r\n                  type=\"text\"\r\n                  value={popupNote.tag}\r\n                  onChange={handleTagChange}\r\n                  className=\"note-input\"\r\n                />\r\n              ) : (\r\n                <span>{popupNote.tag}</span>\r\n              )}\r\n            </div>\r\n            <div>\r\n              <strong>Текст:</strong>\r\n              {editMode ? (\r\n                <textarea\r\n                  value={popupNote.text}\r\n                  onChange={handleTextChange}\r\n                  className=\"note-input\"\r\n                />\r\n              ) : (\r\n                <p>{popupNote.text}</p>\r\n              )}\r\n            </div>\r\n            <div className=\"note-date\">\r\n              {new Date(popupNote.createdAt).toLocaleDateString()} {/* Дата теперь под кнопкой */}\r\n            </div>\r\n            <button onClick={() => setShowPopup(false)} className=\"popup-close\">Закрыть</button>\r\n            <button onClick={handleEditNote} className=\"popup-edit\">Редактировать</button>\r\n            {editMode && (\r\n              <button onClick={handleSaveEdit} className=\"popup-save\">Сохранить</button> // Кнопка для сохранения изменений\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Календарь для выбора даты */}\r\n      <div className=\"calendar-container\">\r\n        <Calendar onChange={setSelectedDate} value={selectedDate} />\r\n      </div>\r\n\r\n      {/* Отображаем заметки, если они есть */}\r\n      <div className=\"notes-container\">\r\n        {filteredByDateNotes.length === 0 && selectedDate && (\r\n          <div className=\"no-results\">Заметки не найдены для этой даты</div>\r\n        )}\r\n        {filteredByDateNotes.map((note, index) => (\r\n          <div className=\"note\" key={index}>\r\n            <div className=\"note-header\">\r\n              <span>{note.topic} - {note.tag}</span>\r\n              <button\r\n                onClick={() => handleDeleteNote(index)}\r\n                className=\"delete-note\"\r\n              >\r\n                Удалить\r\n              </button>\r\n            </div>\r\n            <p>{note.text.substring(0, 30)}...</p> {/* Ограничиваем длину текста */}\r\n            <button\r\n              onClick={() => handleOpenNote(note, index)} // Передаем индекс для редактирования\r\n              className=\"view-note\"\r\n            >\r\n              Смотреть\r\n            </button>\r\n            <div className=\"note-date\">\r\n              {new Date(note.createdAt).toLocaleDateString()} {/* Дата теперь под кнопкой */}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}