{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nconst API_URL = 'http://localhost:8000'; // URL вашего FastAPI-сервера\n\n// Создание API с RTK Query\nexport const api = createApi({\n  reducerPath: 'api',\n  baseQuery: fetchBaseQuery({\n    baseUrl: API_URL\n  }),\n  // Указываем базовый URL для запросов\n  endpoints: builder => ({\n    // Получить все заметки\n    getNotes: builder.query({\n      query: () => '/notes/' // API эндпоинт для получения всех заметок\n    }),\n    // Создать новую заметку\n    createNote: builder.mutation({\n      query: noteData => ({\n        url: '/notes/',\n        // API эндпоинт для создания заметки\n        method: 'POST',\n        body: noteData // Передаем данные для создания заметки\n      })\n    }),\n    // Удалить заметку\n    deleteNote: builder.mutation({\n      query: noteId => ({\n        url: `/notes/${noteId}`,\n        // API эндпоинт для удаления заметки по ID\n        method: 'DELETE'\n      })\n    }),\n    // Обновить заметку\n    updateNote: builder.mutation({\n      query: ({\n        noteId,\n        noteData\n      }) => ({\n        url: `/notes/${noteId}`,\n        // API эндпоинт для обновления заметки по ID\n        method: 'PUT',\n        body: noteData // Передаем данные для обновления заметки\n      })\n    }),\n    // Эндпоинт для авторизации пользователя\n    loginUser: builder.mutation({\n      query: ({\n        username,\n        password\n      }) => ({\n        url: '/auth/login',\n        // API эндпоинт для авторизации\n        method: 'POST',\n        body: {\n          username,\n          password\n        } // Передаем данные для авторизации\n      })\n    })\n  })\n});\n\n// Экспортируем хуки для работы с заметками и авторизацией\nexport const {\n  useGetNotesQuery,\n  useCreateNoteMutation,\n  useDeleteNoteMutation,\n  useUpdateNoteMutation,\n  useLoginUserMutation // Хук для авторизации\n} = api;","map":{"version":3,"names":["createApi","fetchBaseQuery","API_URL","api","reducerPath","baseQuery","baseUrl","endpoints","builder","getNotes","query","createNote","mutation","noteData","url","method","body","deleteNote","noteId","updateNote","loginUser","username","password","useGetNotesQuery","useCreateNoteMutation","useDeleteNoteMutation","useUpdateNoteMutation","useLoginUserMutation"],"sources":["C:/Users/User/Desktop/kur/notes-app/src/api.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nconst API_URL = 'http://localhost:8000'; // URL вашего FastAPI-сервера\r\n\r\n// Создание API с RTK Query\r\nexport const api = createApi({\r\n  reducerPath: 'api',\r\n  baseQuery: fetchBaseQuery({ baseUrl: API_URL }), // Указываем базовый URL для запросов\r\n  endpoints: (builder) => ({\r\n    // Получить все заметки\r\n    getNotes: builder.query({\r\n      query: () => '/notes/', // API эндпоинт для получения всех заметок\r\n    }),\r\n    // Создать новую заметку\r\n    createNote: builder.mutation({\r\n      query: (noteData) => ({\r\n        url: '/notes/', // API эндпоинт для создания заметки\r\n        method: 'POST',\r\n        body: noteData, // Передаем данные для создания заметки\r\n      }),\r\n    }),\r\n    // Удалить заметку\r\n    deleteNote: builder.mutation({\r\n      query: (noteId) => ({\r\n        url: `/notes/${noteId}`, // API эндпоинт для удаления заметки по ID\r\n        method: 'DELETE',\r\n      }),\r\n    }),\r\n    // Обновить заметку\r\n    updateNote: builder.mutation({\r\n      query: ({ noteId, noteData }) => ({\r\n        url: `/notes/${noteId}`, // API эндпоинт для обновления заметки по ID\r\n        method: 'PUT',\r\n        body: noteData, // Передаем данные для обновления заметки\r\n      }),\r\n    }),\r\n    // Эндпоинт для авторизации пользователя\r\n    loginUser: builder.mutation({\r\n      query: ({ username, password }) => ({\r\n        url: '/auth/login', // API эндпоинт для авторизации\r\n        method: 'POST',\r\n        body: { username, password }, // Передаем данные для авторизации\r\n      }),\r\n    }),\r\n  }),\r\n});\r\n\r\n// Экспортируем хуки для работы с заметками и авторизацией\r\nexport const { \r\n  useGetNotesQuery, \r\n  useCreateNoteMutation, \r\n  useDeleteNoteMutation, \r\n  useUpdateNoteMutation,\r\n  useLoginUserMutation // Хук для авторизации\r\n} = api;\r\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AAExE,MAAMC,OAAO,GAAG,uBAAuB,CAAC,CAAC;;AAEzC;AACA,OAAO,MAAMC,GAAG,GAAGH,SAAS,CAAC;EAC3BI,WAAW,EAAE,KAAK;EAClBC,SAAS,EAAEJ,cAAc,CAAC;IAAEK,OAAO,EAAEJ;EAAQ,CAAC,CAAC;EAAE;EACjDK,SAAS,EAAGC,OAAO,KAAM;IACvB;IACAC,QAAQ,EAAED,OAAO,CAACE,KAAK,CAAC;MACtBA,KAAK,EAAEA,CAAA,KAAM,SAAS,CAAE;IAC1B,CAAC,CAAC;IACF;IACAC,UAAU,EAAEH,OAAO,CAACI,QAAQ,CAAC;MAC3BF,KAAK,EAAGG,QAAQ,KAAM;QACpBC,GAAG,EAAE,SAAS;QAAE;QAChBC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEH,QAAQ,CAAE;MAClB,CAAC;IACH,CAAC,CAAC;IACF;IACAI,UAAU,EAAET,OAAO,CAACI,QAAQ,CAAC;MAC3BF,KAAK,EAAGQ,MAAM,KAAM;QAClBJ,GAAG,EAAE,UAAUI,MAAM,EAAE;QAAE;QACzBH,MAAM,EAAE;MACV,CAAC;IACH,CAAC,CAAC;IACF;IACAI,UAAU,EAAEX,OAAO,CAACI,QAAQ,CAAC;MAC3BF,KAAK,EAAEA,CAAC;QAAEQ,MAAM;QAAEL;MAAS,CAAC,MAAM;QAChCC,GAAG,EAAE,UAAUI,MAAM,EAAE;QAAE;QACzBH,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEH,QAAQ,CAAE;MAClB,CAAC;IACH,CAAC,CAAC;IACF;IACAO,SAAS,EAAEZ,OAAO,CAACI,QAAQ,CAAC;MAC1BF,KAAK,EAAEA,CAAC;QAAEW,QAAQ;QAAEC;MAAS,CAAC,MAAM;QAClCR,GAAG,EAAE,aAAa;QAAE;QACpBC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAE;UAAEK,QAAQ;UAAEC;QAAS,CAAC,CAAE;MAChC,CAAC;IACH,CAAC;EACH,CAAC;AACH,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EACXC,gBAAgB;EAChBC,qBAAqB;EACrBC,qBAAqB;EACrBC,qBAAqB;EACrBC,oBAAoB,CAAC;AACvB,CAAC,GAAGxB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}