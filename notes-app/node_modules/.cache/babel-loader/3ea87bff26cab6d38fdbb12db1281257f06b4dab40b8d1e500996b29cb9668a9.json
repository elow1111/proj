{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { api } from '../../api'; // Подключаем API с RTK Query\n\nconst initialState = {\n  notes: [],\n  trash: []\n};\nconst notesSlice = createSlice({\n  name: 'notes',\n  initialState,\n  reducers: {\n    // Добавляем экшн addNote\n    addNote: (state, action) => {\n      state.notes.push(action.payload); // Добавляем заметку в список\n    }\n  },\n  extraReducers: builder => {\n    // Получить все заметки\n    builder.addMatcher(api.endpoints.getNotes.matchFulfilled, (state, action) => {\n      state.notes = action.payload; // Получаем все заметки\n    });\n\n    // Добавить новую заметку (с использованием RTK Query)\n    builder.addMatcher(api.endpoints.createNote.matchFulfilled, (state, action) => {\n      state.notes.push(action.payload); // Добавляем новую заметку в состояние\n    });\n\n    // Удалить заметку\n    builder.addMatcher(api.endpoints.deleteNote.matchFulfilled, (state, action) => {\n      state.notes = state.notes.filter(note => note.id !== action.payload); // Удаляем заметку из списка\n    });\n\n    // Обновить заметку\n    builder.addMatcher(api.endpoints.updateNote.matchFulfilled, (state, action) => {\n      const index = state.notes.findIndex(note => note.id === action.payload.id);\n      if (index !== -1) {\n        state.notes[index] = action.payload; // Обновляем заметку\n      }\n    });\n\n    // Обработка операций с корзиной (например, перемещение в корзину)\n    builder.addMatcher(api.endpoints.moveToTrash.matchFulfilled, (state, action) => {\n      const note = state.notes.find(note => note.id === action.payload);\n      if (note) {\n        state.notes = state.notes.filter(note => note.id !== action.payload);\n        state.trash.push(note); // Перемещаем заметку в корзину\n      }\n    });\n    builder.addMatcher(api.endpoints.restoreNote.matchFulfilled, (state, action) => {\n      const note = state.trash.find(note => note.id === action.payload);\n      if (note) {\n        state.trash = state.trash.filter(note => note.id !== action.payload);\n        state.notes.push(note); // Восстанавливаем заметку\n      }\n    });\n    builder.addMatcher(api.endpoints.deleteNoteForever.matchFulfilled, (state, action) => {\n      state.trash = state.trash.filter(note => note.id !== action.payload); // Удаляем заметку навсегда\n    });\n  }\n});\n\n// Экспортируем все экшены, включая addNote\nexport const {\n  addNote,\n  moveToTrash,\n  restoreNote,\n  deleteNoteForever\n} = notesSlice.actions;\nexport default notesSlice.reducer;","map":{"version":3,"names":["createSlice","api","initialState","notes","trash","notesSlice","name","reducers","addNote","state","action","push","payload","extraReducers","builder","addMatcher","endpoints","getNotes","matchFulfilled","createNote","deleteNote","filter","note","id","updateNote","index","findIndex","moveToTrash","find","restoreNote","deleteNoteForever","actions","reducer"],"sources":["C:/Users/User/Desktop/kur/notes-app/src/redux/slices/notesSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport { api } from '../../api'; // Подключаем API с RTK Query\r\n\r\nconst initialState = {\r\n  notes: [],\r\n  trash: [],\r\n};\r\n\r\nconst notesSlice = createSlice({\r\n  name: 'notes',\r\n  initialState,\r\n  reducers: {\r\n    // Добавляем экшн addNote\r\n    addNote: (state, action) => {\r\n      state.notes.push(action.payload); // Добавляем заметку в список\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    // Получить все заметки\r\n    builder.addMatcher(api.endpoints.getNotes.matchFulfilled, (state, action) => {\r\n      state.notes = action.payload; // Получаем все заметки\r\n    });\r\n\r\n    // Добавить новую заметку (с использованием RTK Query)\r\n    builder.addMatcher(api.endpoints.createNote.matchFulfilled, (state, action) => {\r\n      state.notes.push(action.payload); // Добавляем новую заметку в состояние\r\n    });\r\n\r\n    // Удалить заметку\r\n    builder.addMatcher(api.endpoints.deleteNote.matchFulfilled, (state, action) => {\r\n      state.notes = state.notes.filter(note => note.id !== action.payload); // Удаляем заметку из списка\r\n    });\r\n\r\n    // Обновить заметку\r\n    builder.addMatcher(api.endpoints.updateNote.matchFulfilled, (state, action) => {\r\n      const index = state.notes.findIndex(note => note.id === action.payload.id);\r\n      if (index !== -1) {\r\n        state.notes[index] = action.payload; // Обновляем заметку\r\n      }\r\n    });\r\n\r\n    // Обработка операций с корзиной (например, перемещение в корзину)\r\n    builder.addMatcher(api.endpoints.moveToTrash.matchFulfilled, (state, action) => {\r\n      const note = state.notes.find((note) => note.id === action.payload);\r\n      if (note) {\r\n        state.notes = state.notes.filter((note) => note.id !== action.payload);\r\n        state.trash.push(note); // Перемещаем заметку в корзину\r\n      }\r\n    });\r\n\r\n    builder.addMatcher(api.endpoints.restoreNote.matchFulfilled, (state, action) => {\r\n      const note = state.trash.find((note) => note.id === action.payload);\r\n      if (note) {\r\n        state.trash = state.trash.filter((note) => note.id !== action.payload);\r\n        state.notes.push(note); // Восстанавливаем заметку\r\n      }\r\n    });\r\n\r\n    builder.addMatcher(api.endpoints.deleteNoteForever.matchFulfilled, (state, action) => {\r\n      state.trash = state.trash.filter((note) => note.id !== action.payload); // Удаляем заметку навсегда\r\n    });\r\n  },\r\n});\r\n\r\n// Экспортируем все экшены, включая addNote\r\nexport const { addNote, moveToTrash, restoreNote, deleteNoteForever } = notesSlice.actions;\r\n\r\nexport default notesSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}