{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  isAuthenticated: false,\n  user: null,\n  error: null\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    login(state, action) {\n      const {\n        username,\n        password\n      } = action.payload;\n      if (username === 'elow' && password === '1234rt') {\n        state.isAuthenticated = true;\n        state.user = username;\n        state.error = null;\n      } else {\n        state.error = 'Неправильный логин или пароль';\n      }\n    },\n    logout(state) {\n      state.isAuthenticated = false;\n      state.user = null;\n      state.error = null;\n    },\n    clearError(state) {\n      state.error = null;\n    }\n  }\n});\nexport const {\n  login,\n  logout,\n  clearError\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","isAuthenticated","user","error","authSlice","name","reducers","login","state","action","username","password","payload","logout","clearError","actions","reducer"],"sources":["C:/Users/User/Desktop/kur/notes-app/src/redux/slices/authSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: null,\r\n  error: null,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    login(state, action) {\r\n      const { username, password } = action.payload;\r\n      if (username === 'elow' && password === '1234rt') {\r\n        state.isAuthenticated = true;\r\n        state.user = username;\r\n        state.error = null;\r\n      } else {\r\n        state.error = 'Неправильный логин или пароль';\r\n      }\r\n    },\r\n    logout(state) {\r\n      state.isAuthenticated = false;\r\n      state.user = null;\r\n      state.error = null;\r\n    },\r\n    clearError(state) {\r\n      state.error = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout, clearError } = authSlice.actions;\r\nexport default authSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,eAAe,EAAE,KAAK;EACtBC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,SAAS,GAAGL,WAAW,CAAC;EAC5BM,IAAI,EAAE,MAAM;EACZL,YAAY;EACZM,QAAQ,EAAE;IACRC,KAAKA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACnB,MAAM;QAAEC,QAAQ;QAAEC;MAAS,CAAC,GAAGF,MAAM,CAACG,OAAO;MAC7C,IAAIF,QAAQ,KAAK,MAAM,IAAIC,QAAQ,KAAK,QAAQ,EAAE;QAChDH,KAAK,CAACP,eAAe,GAAG,IAAI;QAC5BO,KAAK,CAACN,IAAI,GAAGQ,QAAQ;QACrBF,KAAK,CAACL,KAAK,GAAG,IAAI;MACpB,CAAC,MAAM;QACLK,KAAK,CAACL,KAAK,GAAG,+BAA+B;MAC/C;IACF,CAAC;IACDU,MAAMA,CAACL,KAAK,EAAE;MACZA,KAAK,CAACP,eAAe,GAAG,KAAK;MAC7BO,KAAK,CAACN,IAAI,GAAG,IAAI;MACjBM,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB,CAAC;IACDW,UAAUA,CAACN,KAAK,EAAE;MAChBA,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEI,KAAK;EAAEM,MAAM;EAAEC;AAAW,CAAC,GAAGV,SAAS,CAACW,OAAO;AAC9D,eAAeX,SAAS,CAACY,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}